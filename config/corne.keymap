/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { tapping-term-ms = <400>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  | BKSP | VOL_UP |
            // | ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  P   |  '     |
            // | F12 |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /   | VOL_DN |
            //                    |     | LWR | ENT |   | SPC | RSE  |       |

            bindings = <
&kp TAB     &kp Q        &kp W       &kp E         &kp R       &kp T      &kp Y      &kp U       &kp I         &kp O       &kp P           &kp C_VOL_UP
&kp ESC     &mt LCTRL A  &mt LALT S  &mt LSHIFT D  &mt LGUI F  &kp G      &kp H      &mt RGUI J  &mt RSHIFT K  &mt RALT L  &mt RCTRL BSPC  &kp CAPS
&kp LSHIFT  &kp Z        &kp X       &kp C         &kp V       &kp B      &kp N      &kp M       &kp COMMA     &kp DOT     &kp DEL         &kp C_VOL_DN
                                     &mo 2         &kp LCMD    &kp RET    &kp SPACE  &mo 1       &mo 3
            >;
        };

        symbol_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCLAMATION            &kp AT_SIGN     &kp HASH        &kp DLLR                &kp PRCNT         &kp AMPS         &kp PLUS                   &kp MINUS        &kp ASTRK              &trans  &trans
&trans  &mt LEFT_CONTROL QUESTION  &mt LALT GRAVE  &mt LSHIFT SQT  &mt LCMD DOUBLE_QUOTES  &kp UNDERSCORE    &kp LBRC         &mt RCMD LEFT_PARENTHESIS  &mt RSHFT EQUAL  &mt RALT LEFT_BRACKET  &trans  &trans
&trans  &kp PIPE                   &kp BACKSLASH   &kp FSLH        &kp CARET               &kp SEMICOLON     &kp RIGHT_BRACE  &kp RPAR                   &kp COLON        &kp RBKT               &trans  &trans
                                                   &trans          &trans                  &trans            &trans           &trans                     &trans
            >;
        };

        number_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans          &trans        &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans        &trans        &trans        &trans        &trans        &trans
                                    &trans        &trans        &trans          &trans        &trans        &trans
            >;
        };

        movement_layer {
            bindings = <
&bt BT_SEL 0  &trans     &trans    &trans     &trans    &trans    &trans          &trans          &trans        &trans           &kp C_NEXT  &trans
&bt BT_SEL 1  &kp LCTRL  &kp LALT  &kp LSHFT  &kp LGUI  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans      &trans
&trans        &trans     &trans    &trans     &trans    &trans    &trans          &trans          &trans        &trans           &trans      &trans
                                   &trans     &trans    &trans    &trans          &trans          &trans
            >;
        };
    };
};
